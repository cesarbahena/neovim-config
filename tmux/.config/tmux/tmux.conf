# More sensible options
set -g default-terminal "tmux-256color"
set -g base-index 1
set -g renumber-windows on
set -g pane-base-index 1
set-hook -g pane-focus-in 'if-shell "echo #{pane_current_command} | grep -qE \"(n?vim)\"" \
    "set -g mouse off; display-message \"Mouse OFF (vim/nvim)\"" \
    "set -g mouse on; display-message \"Mouse ON (shell)\""'

# Statusline
set-option -g status-position top
set -g status-style "bg=default bold"
set -g status-justify left
set -g status-left " #[fg=colour84] #[fg=brightcyan]#S  "
set -g status-left-length 50
set -g window-status-separator " "
set -g window-status-format " #I #W "
set -g window-status-current-format "#[fg=colour84,bold] #W "
set -g status-right ""

# Inactive borders subtle
set -g pane-border-style fg="#555555"

# Active pane border bright cyan
set -g pane-active-border-style fg="#00ffff"

# Show pane index in border
set -g pane-border-format " ⬢ #{pane_index} "

# Keybindings
bind -n M-c command-prompt
bind -n M-x { source-file ~/.config/tmux/tmux.conf ; display "Changes applied" }
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Alt+F5 = save & quit all, then restart Neovim
bind -n M-F5 if-shell "pgrep -f 'n?vim' > /dev/null" \
    "send-keys ':wqa' C-m \; run-shell 'sleep 0.2 && tmux send-keys -t #{pane_id} nvim C-m'" \
    "send-keys 'nvim' C-m"

## Windows (tabs in vim)
bind -n M-\= neww -c "#{pane_current_path}" 
bind -n C-a selectw -t 1 
bind -n C-r selectw -t 2 
bind -n C-s selectw -t 3 
bind -n C-q selectw -t 4 
bind -n C-w selectw -t 5 
bind -n C-f selectw -t 6 
bind -n C-7 selectw -t 7 
bind -n C-8 selectw -t 8 
bind -n C-9 selectw -t 9 
## Panes (windows in vim)
### Creation
bind -n M-\\ splitw -h -c "#{pane_current_path}" 
bind -n M-\- splitw -v -c "#{pane_current_path}" 
bind -n C-x if-shell "$is_vim" "send-keys Q" "kill-p"
### Navigation
bind -n C-k if-shell "$is_vim" "send C-k" { if -F "#{pane_at_left}" "" "selectp -L" }
bind -n C-h if-shell "$is_vim" "send C-h" { if -F "#{pane_at_bottom}" "" "selectp -D" }
bind -n C-e if-shell "$is_vim" "send C-e" { if -F "#{pane_at_top}" "" "selectp -U" }
bind -n C-o if-shell "$is_vim" "send C-o" { if -F "#{pane_at_right}" "" "selectp -R" }
bind -T copy-mode-vi "C-k" if -F "#{pane_at_left}" "" "selectp -L"
bind -T copy-mode-vi "C-h" if -F "#{pane_at_bottom}" "" "selectp -D"
bind -T copy-mode-vi "C-e" if -F "#{pane_at_top}" "" "selectp -U"
bind -T copy-mode-vi "C-o" if -F "#{pane_at_right}" "" "selectp -R"
bind-key -n F11 if-shell "$is_vim" "resize-pane -Z \; send-keys F11" "resize-pane -Z"
### Resize
bind -n M-Left if-shell "$is_vim" "send-keys M-Left" "resizep -L 5"
bind -n M-Right if-shell "$is_vim" "send-keys M-Right" "resizep -R 5"
bind -n M-Up if-shell "$is_vim" "send-keys M-Up" "resizep -U 5"
bind -n M-Down if-shell "$is_vim" "send-keys M-Down" "resizep -D 5"
bind -T copy-mode-vi M-Left resizep -L 5
bind -T copy-mode-vi M-Right resizep -R 5
bind -T copy-mode-vi M-Up resizep -U 5
bind -T copy-mode-vi M-Down resizep -D 5

## Copy mode
setw -g mode-keys vi
bind -n C-Space copy-mode 
### Commands
bind -T copy-mode-vi v send -X start-selection 
bind -T copy-mode-vi V { send -X back-to-indentation ; send v ; send -X end-of-line }
bind -T copy-mode-vi l send -X other-end 
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "clip.exe"
bind -n M-p paste
### Movement
bind -T copy-mode-vi k send -X cursor-left
bind -T copy-mode-vi h send -X cursor-down
bind -T copy-mode-vi e send -X cursor-up
bind -T copy-mode-vi o send -X cursor-right
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi M send -X back-to-indentation
bind -T copy-mode-vi m send -X halfpage-up 
bind -T copy-mode-vi n send -X halfpage-down
bind -T copy-mode-vi N send -X end-of-line
bind -T copy-mode-vi z send -X previous-word
bind -T copy-mode-vi \' send -X next-word
bind -T copy-mode-vi Z send -X previous-space
bind -T copy-mode-vi \" send -X next-space
bind -T copy-mode-vi w send -X next-word-end
bind -T copy-mode-vi W send -X next-space-end

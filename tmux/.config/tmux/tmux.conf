# ============================================================================
# PERFORMANCE & COMPATIBILITY
# ============================================================================

# True color support
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Faster escape sequences for better vim experience
set -sg escape-time 10

# Focus events for better editor integration
set -g focus-events on

# ============================================================================
# GENERAL OPTIONS
# ============================================================================

set -g base-index 1
set -g renumber-windows on
set -g pane-base-index 1

# Smart mouse handling - off in vim/nvim, on in shell (silent)
set-hook -g pane-focus-in 'if-shell "echo #{pane_current_command} | grep -qE \"(n?vim)\"" \
    "set -g mouse off" \
    "set -g mouse on"'

# ============================================================================
# STATUS BAR
# ============================================================================
set-option -g status-position top
set -g status-style "bg=default bold"
set -g status-justify left
set -g status-left " #[fg=colour84] #[fg=brightcyan]#S  "
set -g status-left-length 50
set -g window-status-separator " "
set -g window-status-format " #I #W "
set -g window-status-current-format "#[fg=colour84,bold] #W "
# Enhanced status right with time and system info
set -g status-right "#[fg=colour245] %H:%M #[fg=colour84] %d %b "
set -g status-right-length 50

# ============================================================================
# PANE STYLING
# ============================================================================

# Inactive borders subtle
set -g pane-border-style fg="#555555"

# Active pane border bright cyan
set -g pane-active-border-style fg="#00ffff"

# Show pane index in border
set -g pane-border-format " ⬢ #{pane_index} "

# ============================================================================
# SESSION MANAGEMENT
# ============================================================================

# Quick session switching (Alt + numbers for sessions)
bind -n M-1 switch-client -t 1
bind -n M-2 switch-client -t 2
bind -n M-3 switch-client -t 3

# ============================================================================
# KEY BINDINGS
# ============================================================================

# Configuration
bind -n M-c command-prompt
bind -n M-x { source-file ~/.config/tmux/tmux.conf ; display "Changes applied" }

# Vim detection for smart key bindings
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# ============================================================================
# MOUSE & COPY MODE
# ============================================================================

# Mouse scroll to enter copy mode (except in nvim)  
bind -n WheelUpPane if-shell -F "#{mouse_any_flag}" "send-keys -M" "if -F '#{pane_in_mode}' 'send-keys -M' 'if-shell \"\$is_vim\" \"send-keys -M\" \"copy-mode -e\"'"

# ============================================================================
# WORKFLOW SHORTCUTS
# ============================================================================

# Alt+F5 = save & quit all, then restart Neovim
bind -n M-F5 if-shell "pgrep -f 'n?vim' > /dev/null" \
    "send-keys ':wqa' C-m \; run-shell 'sleep 0.2 && tmux send-keys -t #{pane_id} nvim C-m'" \
    "send-keys 'nvim' C-m"

# ============================================================================
# WINDOW MANAGEMENT
# ============================================================================
# Window creation and navigation (Colemak layout)
bind -n M-\= neww -c "#{pane_current_path}" 
bind -n C-a selectw -t 1 
bind -n C-r selectw -t 2 
bind -n C-s selectw -t 3 
bind -n C-q selectw -t 4 
bind -n C-w selectw -t 5 
bind -n C-f selectw -t 6 
bind -n C-7 selectw -t 7 
bind -n C-8 selectw -t 8 
bind -n C-9 selectw -t 9

# Window swapping and moving
bind -n M-m swap-window -t -1 \; select-window -t -1
bind -n M-n swap-window -t +1 \; select-window -t +1

# ============================================================================
# PANE MANAGEMENT
# ============================================================================
# Pane creation and management
bind -n M-\\ splitw -h -c "#{pane_current_path}" 
bind -n M-\- splitw -v -c "#{pane_current_path}" 
bind -n C-x if-shell "$is_vim" "send-keys Q" "kill-p"
# Pane navigation (Colemak layout with vim integration)
bind -n C-k if-shell "$is_vim" "send C-k" { if -F "#{pane_at_left}" "" "selectp -L" }
bind -n C-h if-shell "$is_vim" "send C-h" { if -F "#{pane_at_bottom}" "" "selectp -D" }
bind -n C-e if-shell "$is_vim" "send C-e" { if -F "#{pane_at_top}" "" "selectp -U" }
bind -n C-o if-shell "$is_vim" "send C-o" { if -F "#{pane_at_right}" "" "selectp -R" }
bind -T copy-mode-vi "C-k" if -F "#{pane_at_left}" "" "selectp -L"
bind -T copy-mode-vi "C-h" if -F "#{pane_at_bottom}" "" "selectp -D"
bind -T copy-mode-vi "C-e" if -F "#{pane_at_top}" "" "selectp -U"
bind -T copy-mode-vi "C-o" if -F "#{pane_at_right}" "" "selectp -R"
bind-key -n F11 if-shell "$is_vim" "resize-pane -Z \; send-keys F11" "resize-pane -Z"
# Pane resizing
bind -n M-Left if-shell "$is_vim" "send-keys M-Left" "resizep -L 5"
bind -n M-Right if-shell "$is_vim" "send-keys M-Right" "resizep -R 5"
bind -n M-Up if-shell "$is_vim" "send-keys M-Up" "resizep -U 5"
bind -n M-Down if-shell "$is_vim" "send-keys M-Down" "resizep -D 5"
bind -T copy-mode-vi M-Left resizep -L 5
bind -T copy-mode-vi M-Right resizep -R 5
bind -T copy-mode-vi M-Up resizep -U 5
bind -T copy-mode-vi M-Down resizep -D 5

# ============================================================================
# COPY MODE
# ============================================================================
setw -g mode-keys vi
bind -n C-Space copy-mode 

# Copy mode commands and selection
bind -T copy-mode-vi v send -X start-selection 
bind -T copy-mode-vi V { send -X back-to-indentation ; send v ; send -X end-of-line }
bind -T copy-mode-vi l send -X other-end 
# Cross-platform clipboard integration
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "if command -v pbcopy > /dev/null; then pbcopy; elif command -v xclip > /dev/null; then xclip -selection clipboard; elif command -v clip.exe > /dev/null; then clip.exe; fi"
bind -n M-p paste

# Copy mode movement (Colemak layout)
bind -T copy-mode-vi k send -X cursor-left
bind -T copy-mode-vi h send -X cursor-down
bind -T copy-mode-vi e send -X cursor-up
bind -T copy-mode-vi o send -X cursor-right
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi M send -X back-to-indentation
bind -T copy-mode-vi m send -X halfpage-up 
bind -T copy-mode-vi n send -X halfpage-down
bind -T copy-mode-vi N send -X end-of-line
bind -T copy-mode-vi z send -X previous-word
bind -T copy-mode-vi \' send -X next-word
bind -T copy-mode-vi Z send -X previous-space
bind -T copy-mode-vi \" send -X next-space
bind -T copy-mode-vi w send -X next-word-end
bind -T copy-mode-vi W send -X next-space-end
